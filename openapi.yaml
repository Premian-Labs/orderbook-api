openapi: 3.1.0
info:
  title: Premia Orderbook Open API (OpenAPI 3.0)
  description: Premia containerised API for decentralised orderbook trading, position, and account management.
  license:
    name: Attribution-NonCommercial 3.0
    url: https://creativecommons.org/licenses/by-nc/3.0
  version: 1.0.0
paths:
  /orderbook/quotes:
    post:
      summary: Publishes the quote into the orderbook
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PublishQuotesRequest'
        required: true
      responses:
        '200':
          description: Quote exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        reason:
                          type: string
                          enum:
                            - 'Quote deadline is invalid (cannot be less than 60 sec)'
                            - 'Failed to fetch pool address'
                            - QuoteOBExpired
                            - QuoteOBCancelled
                            - QuoteOBOverfilled
                            - OutOfBoundsPrice
                            - InvalidQuoteOBTaker
                            - InvalidQuoteOBSignature
                            - InvalidAssetUpdate
                            - InsufficientCollateralAllowance
                            - InsufficientCollateralBalance
                            - InsufficientLongBalance
                            - InsufficientShortBalance
                        invalidQuote:
                          $ref: '#/components/schemas/ReturnedOrderbookQuote'
                  exists:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReturnedOrderbookQuote'
        '201':
          description: Quote created
          content:
            application/json:
              schema:
                type: object
                properties:
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        reason:
                          type: string
                          enum:
                            - 'Quote deadline is invalid (cannot be less than 60 sec)'
                            - 'Failed to fetch pool address'
                            - QuoteOBExpired
                            - QuoteOBCancelled
                            - QuoteOBOverfilled
                            - OutOfBoundsPrice
                            - InvalidQuoteOBTaker
                            - InvalidQuoteOBSignature
                            - InvalidAssetUpdate
                            - InsufficientCollateralAllowance
                            - InsufficientCollateralBalance
                            - InsufficientLongBalance
                            - InsufficientShortBalance
                        invalidQuote:
                          $ref: '#/components/schemas/ReturnedOrderbookQuote'
                  exists:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReturnedOrderbookQuote'
                  created:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReturnedOrderbookQuote'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
    patch:
      summary: Fills the quote
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FillQuotesRequest'
        required: true
      responses:
        '200':
          description: Quotes filled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      type: string
                      description: filled quote ids
                      pattern: "[a-fA-F0-9]{64}"
                  failed:
                    type: array
                    items:
                      type: string
                      description: failed to fill quote ids
                      pattern: "[a-fA-F0-9]{64}"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
    delete:
      summary: Deletes the quote from the orderbook
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeleteQuotesRequest'
        required: true
      responses:
        '200':
          description: Quote cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      type: string
                      pattern: '[a-fA-F0-9]{64}$'
                  failed:
                    type: array
                    items:
                      type: string
                      pattern: '[a-fA-F0-9]{64}$'
                  omitted:
                    type: array
                    items:
                      type: string
                      pattern: '[a-fA-F0-9]{64}$'
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
    get:
      summary: Get all quotes for a specific option up to a specified size/qty (order of best to worst price)
      parameters:
        - name: base
          in: query
          required: true
          description: ie WETH, WBTC, ARB, LINK
          schema:
            type: string
            pattern: "^0x[a-fA-F0-9]{40}$"
        - name: quote
          in: query
          required: true
          description: ie USDC
          schema:
            type: string
            pattern: "^0x[a-fA-F0-9]{40}$"
        - name: expiration
          in: query
          required: true
          description: option expiration date. ie 03NOV23, 10NOV23, 01DEC23
          schema:
            type: string
            pattern: ^\d\d\w\w\w\d\d$
        - name: strike
          in: query
          required: true
          description: ie 1.1, 10, 1700, 35000,
          schema:
            type: number
        - name: type
          in: query
          description: option type (C for call or P for put)
          required: true
          schema:
            type: string
            pattern: ^C$|^P$
        - name: size
          in: query
          description: number of contracts (ie. 1, 4.2, 5, 15.5)
          required: true
          schema:
            type: number
            minimum: 0
        - name: side
          in: query
          description: orderbook side ("ask" or "bid")
          required: true
          schema:
            type: string
            pattern: "^bid$|^ask$"
        - name: provider
          in: query
          description: unique address of the provider (maker)
          required: false
          schema:
            type: string
            pattern: "^0x[a-fA-F0-9]{40}$"
        - name: taker
          in: query
          description: unique address of the taker (only for rfq quotes)
          required: false
          schema:
            type: string
            pattern: "^0x[a-fA-F0-9]{40}$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnedOrderbookQuote'
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /orderbook/orders:
    get:
      summary: Gets quotes by quoteIds
      parameters:
        - name: base
          in: query
          required: true
          schema:
            quoteIds:
              type: array
              items:
                type: string
                pattern: '[a-fA-F0-9]{64}$'
              minItems: 1
              maxItems: 25
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnedOrderbookQuote'
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /pool/settle:
    post:
      summary: Settles options (shorts)
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PositionsRequestParams'
        required: true
      responses:
        '200':
          description: Positions settled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/Option'
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        failedOption:
                          type: object
                          $ref: '#/components/schemas/Option'
                        reason:
                          type: string
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /pool/exercise:
    post:
      summary: Exercise options (longs)
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PositionsRequestParams'
        required: true
      responses:
        '200':
          description: Positions exercised
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/Option'
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        failedOption:
                          type: object
                          $ref: '#/components/schemas/Option'
                        reason:
                          type: string
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /pool/annihilate:
    post:
      summary: Annihilate options
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PositionsRequestParams'
        required: true
      responses:
        '200':
          description: Positions annihilated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/Option'
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        failedOption:
                          type: object
                          $ref: '#/components/schemas/Option'
                        reason:
                          type: string
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /account/collateral_approval:
    post:
      summary: Approve collateral for trading
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApprovalsRequest'
        required: true
      responses:
        '200':
          description: Approved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/TokenApproval'
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        failedApproval:
                          type: object
                          $ref: '#/components/schemas/TokenApproval'
                        reason:
                          type: string
        '400':
          description: Invalid parameters supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /account/orders:
    get:
      summary: Gets all user's quotes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnedOrderbookQuote'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /account/collateral_balances:
    get:
      summary: Checks collateral balance
      responses:
        '200':
          description: Approved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/TokenBalance'
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        failedBalanceQueries:
                          type: string
                        reason:
                          type: string
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /account/native_balance:
    get:
      summary: Checks collateral balance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: number
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
  /account/option_balances:
    get:
      summary: Checks option balance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionPositions'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
      security:
        - api_key:
            - api
components:
  schemas:
    Option:
      type: object
      properties:
        base:
          type: string
        expiration:
          type: string
          pattern: ^\d\d\w\w\w\d\d$
        quote:
          type: string
        strike:
          type: number
        type:
          enum:
            - C
            - P
          type: string
    NFTBalance:
      type: object
      properties:
        amount:
          type: number
        name:
          type: string
        token_address:
          type: string
    OptionPositions:
      properties:
        expired:
          items:
            $ref: '#/components/schemas/NFTBalance'
          type: array
        open:
          items:
            $ref: '#/components/schemas/NFTBalance'
          type: array
      type: object
    TokenBalance:
      type: object
      properties:
        balance:
          oneOf:
            - type: string
            - type: number
        symbol:
          type: string
        token_address:
          type: string
    TokenApproval:
      type: object
      properties:
        amt:
          oneOf:
            - type: string
              pattern: 'max'
            - type: number
        token:
          type: string
    ReturnedOrderbookQuote:
      required:
        - base
        - quote
        - expiration
        - strike
        - type
        - side
        - size
        - price
        - deadline
      type: object
      properties:
        base:
          type: string
        quote:
          type: string
        expiration:
          type: string
          pattern: ^\d\d\w\w\w\d\d$
        strike:
          type: number
        type:
          enum:
            - C
            - P
          type: string
        side:
          enum:
            - ask
            - bid
          type: string
        size:
          type: number
        price:
          type: number
        deadline:
          type: number
        quoteId:
          type: string
          pattern: '[a-fA-F0-9]{64}$'
        ts:
          type: number
    DeleteQuotesRequest:
      type: object
      properties:
        quoteIds:
          type: array
          items:
            type: string
            pattern: '[a-fA-F0-9]{64}$'
          minItems: 1
      required:
        - quoteIds
    FillQuotesRequest:
      type: array
      items:
        type: object
        properties:
          tradeSize:
            type: number
            minimum: 0
          quoteId:
            type: string
            pattern: '[a-fA-F0-9]{64}$'
        required:
          - size
          - quoteId
    PositionsRequestParams:
      type: array
      items:
        type: object
        properties:
          base:
            type: string
            pattern: ^testWETH$|^WETH$|^WBTC$|^PREMIA$|^LINK$|^USDC$|^DAI$|^ARB$
          quote:
            type: string
            pattern: ^testWETH$|^WETH$|^WBTC$|^PREMIA$|^LINK$|^USDC$|^DAI$|^ARB$
          expiration:
            type: string
            pattern: ^\d\d\w\w\w\d\d$
          strike:
            type: number
          type:
            type: string
            pattern: ^C$|^P$
        required:
          - base
          - quote
          - expiration
          - strike
          - type
    ApprovalsRequest:
      type: array
      items:
        type: object
        properties:
          token:
            type: string
            pattern: ^testWETH$|^WETH$|^WBTC$|^PREMIA$|^LINK$|^USDC$|^DAI$|^ARB$
          amt:
            oneOf:
              - type: number
              - type: string
                pattern: ^max$
        required:
          - token
          - amt
      minItems: 1
      maxItems: 8
    PublishQuotesRequest:
      type: array
      items:
        type: object
        properties:
          base:
            type: string
            pattern: ^testWETH$|^WETH$|^WBTC$|^PREMIA$|^LINK$|^USDC$|^DAI$|^ARB$
          quote:
            type: string
            pattern: ^testWETH$|^WETH$|^WBTC$|^PREMIA$|^LINK$|^USDC$|^DAI$|^ARB$
          expiration:
            type: string
            pattern: ^\d\d\w\w\w\d\d$
          strike:
            type: number
          type:
            type: string
            pattern: ^C$|^P$
          side:
            type: string
            pattern: ^bid$|^ask$
          size:
            type: number
          price:
            type: number
          deadline:
            type: integer
          taker:
            type: string
            pattern: ^0x[a-fA-F0-9]{40}$
        required:
          - base
          - quote
          - expiration
          - strike
          - type
          - side
          - size
          - price
          - deadline
    AnyValue: {}
    AuthError:
      type: object
      properties:
        message:
          type: string
          default: 'Invalid API key'
    ValidationError:
      type: array
      items:
        type: object
        properties:
          keyword:
            type: string
          dataPath:
            type: string
          params:
            $ref: '#/components/schemas/AnyValue'
          message:
            type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: x-apikey
      in: header